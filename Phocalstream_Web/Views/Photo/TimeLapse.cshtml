@model Phocalstream_Web.Models.ViewModels.TimelapseModel

@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    double WIDTH = 700.0;
    string RESOLUTION = "medium";
    bool DEBUG = false;
}

@section Scripts
{
    <script type="text/javascript">

        var MAX_BUFFER = 500; // buffer size

        var frameset = @Html.Raw(Json.Encode(Model.Frames)); // the full set of frames represented by a list of frame models

        var buffer; // the actual Image objects with data for a photo 

        var pos = 0; // current position for display
        var bufferPos = 0; // current position of image to buffer

        var len = 0; // length of the image set
        var bufferLen = 0; // length of the buffer (could be less than MAX)

        var running; 

        var width = @WIDTH; // frame width
        var height = @(WIDTH * ((float)Model.Height / (float)Model.Width)); // frame height

        var progLen; // length of the progress bar

        var DATE_PATTERN = /\/Date\((.*)\)\//;

        $(document).ready(function () {

            // set the total length
            len = frameset.length;

            // set the progress bar length conditionally based on the image set size
            if (len > MAX_BUFFER) {
                progLen = MAX_BUFFER;
            } else {
                progLen = len;
            }

            // create the array to hold the buffered image data
            buffer = new Array();
            bufferData();

            $.ajax(
                {
                    url: "/api/data/timelapsedm",
                    type: "POST",
                    data: { IdList: "@Model.IDList", CountyFips: @Model.CountyFips },
                    success: function (result) {
                        console.log(result);
                    }});
        });

        function bufferData() {
            // for each image up to MAX, load the data into the buffer 
            var imageObj = new Image();

            // event handler to invoke the call to buffer the next image after the current one has been bufferd
            imageObj.onload = function() {

                // update the progress bar
                var complete = parseInt(((bufferPos++ / progLen)*100));
                $("#progress").css("width", complete+"%").attr('aria-valuenow', complete);


                // if there is more to buffer, do that
                if (bufferPos < len && bufferPos < MAX_BUFFER) {
                    bufferData();
                } else {
                    // if not, set the length of the buffer
                    bufferLen = bufferPos;

                    @if(DEBUG) {
                        <text>
                           $("#blen").append(bufferLen);
                           $("#flen").append(len);
                        </text>
                    }
                    
                    // get the display canvas and set the size
                    var canvas = document.getElementById("vscreen");

                    canvas.style.width = width+"px";
                    canvas.style.height = height+"px";

                    canvas.width = width;
                    canvas.height = height;

                // get rid of the buffering display and begin the movie
                $("#loadDiv").hide();
                $("#video").show();
                running = true;
                nextImage(); // invokes the call to update the display canvas with the next image
            }
        };

        // set the source of the image being buffered which will cause the event handler to be invoked when the image has loaded
        imageObj.src = "/api/photo/@RESOLUTION/"+frameset[bufferPos].PhotoID;
        buffer.push(imageObj); // store the image object in the buffer
    }

    function nextImage() {
        @{ 
            if (DEBUG) {
                <texT>
                    $("#pid").empty();
                    $("#pid").append(frameset[pos % len].PhotoID);
                </text>
            }   
        }

        var imageTime = new Date(Number(DATE_PATTERN.exec(frameset[pos % len].FrameTime)[1]));

        $("#frameDate").empty();
        $("#frameDate").append(imageTime);

        // load the image data to display from the buffer
        var image = buffer[pos++ % bufferLen];

        // get the display canvas drawing context
        var canvas = document.getElementById("vscreen");
        var context = canvas.getContext('2d');

        // draw the buffered image data
        context.drawImage(image, 0, 0, width, height);

        // if the buffer is smaller than the total frameset, buffer the next image
        if (bufferLen < len) {
            var imageObj = new Image();

            /* Load the next image based on the buffer position into the buffer. 
             * NOTE: this will place the next image to buffer into the position 
             * of the image data that was just displayed. In MAX cycles, this 
             * data will be pulled from the buffer and displayed. This gives
             * sufficient time for the data to load before it is needed. */
            imageObj.src = "/api/photo/@RESOLUTION/"+frameset[bufferPos % len].PhotoID;
            buffer[bufferPos++ % bufferLen] = imageObj;
        }

        @{ 
            if (DEBUG) {
                <texT>
                    $("#pos").empty();
                    $("#bufPos").empty();

                    $("#pos").append(pos % len);
                    $("#bufPos").append(bufferPos % bufferLen);
                </text>
            }   
        }

        // set the time to invoke the next image display call
        if ( running == true) {
            setTimeout(function () { nextImage(); }, 200);
        }
    }

    function startStop() {
        if ( running == true ) {
            $("#controls").removeClass("glyphicon-pause");
            $("#controls").addClass("glyphicon-play");
            running = false;
        } else {
            $("#controls").removeClass("glyphicon-play");
            $("#controls").addClass("glyphicon-pause");
            running = true;
            nextImage();
        }
    }
    </script>
}

<div class="container">
    <div class="content">
        <div id="loadDiv">
            <h3 id="bufferlabel">Hang tight, we're buffering the photos for smooth playback</h3>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped active" id="progress" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        <div id="video" style="display: none;">
            <div class="col-md-8">
                <div id="frames">
                    <canvas id="vscreen"></canvas>
                    <button class="btn btn-default" onclick="startStop()">
                        <span id="controls" class="glyphicon glyphicon-pause"></span>
                    </button>
                    <span id="frameDate"></span>
                </div>
            </div>
            <div class="col-md-4">
                @if (DEBUG) { 
                <p>
                    Photo <span id="pid"></span> at position <span id="pos"></span> and buffer position of <span id="bufPos"></span>
                </p>
                <p>
                    Frameset Length: <span id="flen"></span> with buffer length <span id="blen"></span>
                </p>
                }
            </div>
        </div>
    </div>
</div>