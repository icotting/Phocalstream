@model Phocalstream_Shared.Data.Model.View.SearchModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/CSS/Search.css")

@Scripts.Render("~/Content/Scripts/jquery-ui-1.9.2.js",
                "~/Content/Scripts/jquery-lazyload.js")

<!-- Bootstrap Tags Input CSS and JS Files -->
<link href="~/Content/bootstrap-tags/css/bootstrap-tagsinput.css" rel="stylesheet">
<link href="~/Content/CSS/typeahead.css" rel="stylesheet">
<script src="~/Content/bootstrap-tags/js/bootstrap-tagsinput.js"></script>
<script src="~/Content/typeahead/typeahead.bundle.js"></script>

<script type="text/javascript" src="~/Content/Scripts/bootbox.min.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoDownload.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoSaveCollection.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoTimelapse.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoSearchResults.js"></script>

<!-- Knockout.js -->
<script src="~/Content/Scripts/knockout-3.2.0.js"></script>
<script src="~/Content/Scripts/SearchViewModel.js"></script>

<!-- Context Menu -->
<script src="~/Content/Scripts/jquery.contextMenu.js"></script>
<script src="~/Content/Scripts/jquery.ui.position.js"></script>
<link href="~/Content/CSS/jquery.contextMenu.css" rel="stylesheet" >

<script>
    var userId = '@ViewBag.UserId';
    var initialCollection = '@ViewBag.CollectionId';

    var photoIds = [];
    var limit = 500;
    var visibleItems = "";
    var saveIds = "";
    var topMoved = false;

    var yearQuery = '@ViewBag.Year';
    var tag = '@ViewBag.Tag';
    var site = '@ViewBag.Site';

    // dependency variables for PhotoSearchResults.js
    var totalPhotoCount = 0;
    var basePhotoUrl = "@Url.Action("Index", "Photo", null)?photoId=";

    var searchVM;

    function setCover(photoId) {
        var form;
        form = $('<form />', {
            action: '/api/sitecollection/updatecover',
            method: 'GET',
            style: 'display: none;'
        });

        form.append($('<input/>', {
            type: 'hidden',
            name: 'photoId',
            value: photoId
        }));

        form.appendTo('body').submit();
    }

    $(function(){
        // Set up the Knockout ViewModel
        searchVM = new ViewModel();
        ko.applyBindings(searchVM);

        // Typeahead 
        var availableTags = @Html.Raw(Json.Encode(Model.AvailableTags));
        var sites = @Html.Raw(Json.Encode(Model.SiteNames));

        var substringMatcher = function(strs) {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                // iterate through the pool of strings and for any string that
                // contains the substring `q`, add it to the `matches` array
                $.each(strs, function(i, str) {
                    if (substrRegex.test(str)) {

                        // the typeahead jQuery plugin expects suggestions to a
                        // JavaScript object, refer to typeahead docs for more info
                        matches.push({ value: str });
                    }
                });

                cb(matches);
            };
        };

        // tags tags input
        $('#tag-field').tagsinput();
        $('#tag-field').tagsinput('input').typeahead({
            minLength: 2,
            highlight: true,
        },
        {
            name: 'available-tags',
            source: substringMatcher(availableTags)
        }).bind('typeahead:selected', $.proxy(function (obj, datum) {
            this.tagsinput('add', datum.value);
            this.tagsinput('input').typeahead('val', '');
        }, $('#tag-field')));

        // site tags input
        $('#site-field').tagsinput();
        $('#site-field').tagsinput('input').typeahead({
            minLength: 2,
            highlight: true,
        },
        {
            name: 'sites',
            source: substringMatcher(sites)
        }).bind('typeahead:selected', $.proxy(function (obj, datum) {
            this.tagsinput('add', datum.value);
            this.tagsinput('input').typeahead('val', '');
        }, $('#site-field')));


        // If the viewbag had valid sites or tags, add them to the input field
        if (availableTags.indexOf(tag) != -1) {
            $('#tag-field').tagsinput('add', tag);
        }

        if (sites.indexOf(site) != -1) {
            $('#site-field').tagsinput('add', site);
        }


        // Do initial search for photos
        searchVM.getPhotos();


        // Set up the right click listener for the images
        $.contextMenu({
            selector: '.photo',
            callback: function(key, options) {
                if (key == "full") {
                    window.open(basePhotoUrl + $(this).prop('id').split('-')[1], '_blank');
                }
                else if (key == "cover") {
                    setCover($(this).prop('id').split('-')[1])
                }
            },
            items: {
                "full": {name: "View Full Image", icon: ""}
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <text>, "cover": {name: "Set Cover Photo", icon: ""} </text>
                }
            }
        });

        // Attempt to load the page using InfiniteScroll.js
        checkListItemContents($("#ul-holder"));
    });
</script>

<script type="text/javascript" src="~/Content/Scripts/InfiniteScroll.js"></script>


<!-- LEFT: Search Parameters-->
<div class="search-params">
    <div data-bind="visible: search() === false" class="col-md-12">
        <p class="alert alert-warning text-center"><strong>Please selected at least one search parameter.</strong></p>
    </div>
    <div data-bind="visible: search() === true && queryResults() == 0" class="col-md-12">
        <p class="alert alert-info text-center"><strong>No images found.</strong></p>
    </div>

    <!-- Sort By -->
    <div class="search-row row">
        <div class="col-md-12">
            <strong>Results</strong>
        </div>
    </div>
    <div class="search-row row">
        <div class="col-md-4">
            <label class="filter-label">Sort By</label>
        </div>
        <div class="col-md-8">
            <div class="btn-group btn-group-justified">
                <label class="btn btn-default" data-bind="css: { 'active': group() === 'date' }">
                    <input type="radio" name="sortoptions" id="date" data-bind="checked: group, checkedValue: 'date'">Date
                </label>
                <label class="btn btn-default" data-bind="css: { 'active': group() === 'site' }">
                    <input type="radio" name="sortoptions" id="group" data-bind="checked: group, checkedValue: 'site'">Site
                </label>
            </div>
        </div>
    </div>
    <div class="search-row row">
        <div class="col-md-4">
            <label class="filter-label">Thumbnails</label>
        </div>
        <div class="col-md-8">
            <div class="btn-group full-width">
                <!-- Change button type based on status -->
                <button type="button" class="btn btn-default full-width dropdown-toggle" data-toggle="dropdown">
                    <span data-bind="text: size().name"> </span> <span class="caret"></span>
                </button>

                <!-- Loop for status -->
                <ul class="dropdown-menu" role="menu" data-bind="foreach: sizes">
                    <!-- Disable item if selected -->
                    <li data-bind="css: {'active' : name == $parent.size().name}">
                        <!-- This is where I need to bind the click to change the value of the status -->
                        <a href="#" data-bind="click: $parent.size"><span data-bind="text: name"></span></a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    
    <hr class="featurette-divider" />

    <!-- Image Source -->
    <div class="search-row">
        <strong>Image Source</strong>
    </div>

    <div class="search-row row">
        <div class="col-md-12">
            <div class="btn-group btn-group-justified">
                <label class="btn btn-default" data-bind="css: { 'active': source() === 'sites' }">
                    <input type="radio" name="sourceOptions" id="cameraSites" data-bind="checked: source, checkedValue: 'sites'">Camera Sites
                </label>
                <label class="btn btn-default" data-bind="css: { 'active': source() === 'public' }">
                    <input type="radio" name="sourceOptions" id="publicUser" data-bind="checked: source, checkedValue: 'public'">User Collections
                </label>
                <label class="btn btn-default" data-bind="css: { 'active': source() === 'both' }">
                    <input type="radio" name="sourceOptions" id="both" data-bind="checked: source, checkedValue: 'both'">
                    Both
                </label>
            </div>
        </div>
    </div>

    <hr class="featurette-divider" />

    <!-- FILTERS -->
    <div class="search-row">
        <strong>Filters</strong>
    </div>

    <!-- Sites -->
    <div class="search-row">
        <div class="input-group">
            <span class="input-group-addon">Sites</span>
            <input id="site-field" data-bind="value: siteNames" />
        </div>
    </div>

    <!-- Tags -->
    <div class="search-row">
        <div class="input-group">
            <span class="input-group-addon">Tags</span>
            <input id="tag-field" data-bind="value: tagNames" />
        </div>
    </div>

    <!-- Dates -->
    <div class="search-row">
        <div class="input-group">
            <span class="input-group-addon">Dates</span>
            <input id="date-field" class="form-control" data-bind="value: dates" />
        </div>
    </div>

    <!-- Months -->
    <div class="search-row">
        <div class="row">
            <div class="col-md-8">
                <label class="filter-label" data-toggle="collapse" data-target="#months-collapse" aria-expanded="false" aria-controls="months-collapse">Months <span class="caret"></span></label>
            </div>
            <div class="col-md-4">
                <button id="clear-months" type="button" class="btn btn-danger btn-xs pull-right" data-bind="click: clearMonths, visible: selectedMonths().length > 0">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Clear
                </button>
            </div>
        </div>
        <div class="collapse" id="months-collapse">
            <div class="row text-center" data-bind="foreach: months">
                <div class="col-md-6">
                    <label>
                        <input type="checkbox" data-bind="attr: {id: month, value: month}, checked: $root.selectedMonths, click: $root.toggleAssociation" />
                        <span data-bind="css: { 'selected' : Selected }, text: name"></span>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Hours -->
    <div class="search-row">
        <div class="row">
            <div class="col-md-8">
                <label class="filter-label" data-toggle="collapse" data-target="#hours-collapse" aria-expanded="false" aria-controls="hours-collapse">Times of Day <span class="caret"></span></label>
            </div>
            <div class="col-md-4">
                <button id="clear-times" type="button" class="btn btn-danger btn-xs pull-right" data-bind="click: clearTimes, visible: selectedHours().length > 0">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Clear
                </button>
            </div>
        </div>
        <div class="collapse" id="hours-collapse">
            <div class="row text-center" data-bind="foreach: hours">
                <div class="col-md-3">
                    <label>
                        <input type="checkbox" data-bind="value: name, checked: $root.selectedHours, click: $root.toggleAssociation" />
                        <span data-bind="css: { 'selected' : Selected }, text: name"></span>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- BOTTOM DIV -->
    <div data-bind="visible: search">
        <hr class="featurette-divider" />
        
        <!-- Query and Results -->
        <div class="search-row text-center">
            <div class="row">
                <div class="col-md-12">
                    <p class="search-results"><strong data-bind="text: query"></strong></p>
                </div>
                <div class="col-md-12">
                    <!-- ko if: selectedCount() == 0 -->
                    <!-- ko if: queryResults() == 1 -->
                    <p class="label label-info">Found <strong data-bind="text: queryResults"></strong> photo</p>
                    <!-- /ko -->
                    <!-- ko ifnot: queryResults() == 1 -->
                    <p class="label label-info">Found <strong data-bind="text: queryResults"></strong> photos</p>
                    <!-- /ko -->
                    <!-- /ko -->
                    <!-- ko ifnot: selectedCount() == 0 -->
                    <!-- ko if: selectedCount() == 1 -->
                    <p class="label label-info"><strong data-bind="text: selectedCount"></strong> of <strong data-bind="text: queryResults"></strong> photo selected</p>
                    <!-- /ko -->
                    <!-- ko ifnot: selectedCount() == 1 -->
                    <p class="label label-info"><strong data-bind="text: selectedCount"></strong> of <strong data-bind="text: queryResults"></strong> photos selected</p>
                    <!-- /ko -->
                    <button id="clear-selection" type="button" class="btn btn-danger btn-xs pull-right" data-bind="click: clearSelected, visible: selectedCount() > 0">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Clear
                    </button>
                    <!-- /ko -->
                </div>
            </div>
        </div>

        <!-- Timelapse, Save, Download -->
        <div class="search-row">
            <div class="btn-group btn-group-justified">
                <a data-bind="click: timelapse, enable: queryResults() > 0" class="btn btn-default">Timelapse</a>
                @if (Request.IsAuthenticated)
            {
                    <a data-bind="click: saveCollection, enable: queryResults() > 0" class="btn btn-default">Save</a>
            }
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                    <a data-bind="click: download, enable: queryResults() > 0" class="btn btn-default">Download</a>
            }
            </div>
        </div>
    </div>
</div>

<!-- RIGHT: Results-->
<ul id="ul-holder" data-bind=""> </ul>

<!--
<ul id="ul-holder" class="col-md-12" data-bind="visible: queryResults() > 0, foreach: photos">
    <li data-bind="attr: { id: 'photo-li-' + $data }" class="search-photo">
        <p class="img-date"></p>
        <img data-bind="attr: { id: 'photo-' + $data, src: '/api/photo/low/' + $data }, click: $root.selectPhoto" class="photo" />
    </li>
</ul>
-->

<!------------------------------------------------------>
<!--              TEMPLATE FOR IMAGE                  -->
<!------------------------------------------------------>

<script id="list-item-template" type="application/template">
    <li id="photo-li-${id}" class="search-photo" onclick="searchVM.selectPhoto('${id}')">
        <p class="img-date"></p>
        <img src="/api/photo/low/${id}" id="photo-${id}" class="photo" style="width: ${width}px; height: ${height}px;" />
    </li>
</script>


<!-- Save User Collection Modal -->
<div id="userCollectionModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">User Collections</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <label class="col-md-12" for="newCollectionName">New Collection Name</label>
                    <div class="col-md-12">
                        <input id="newCollectionName" name="newCollectionName" type="text" placeholder="New Collection Name" class="form-control input-md">
                    </div>
                </div>

                @if (@Model.UserCollections != null)
                {
                    <hr class="featurette-divider" />

                    <div class="row">
                        <label class="col-md-12">Or, Add To Existing</label>
                        <div class="col-md-12">
                            <ul class="list-group user-collection-list">
                                @foreach (var col in Model.UserCollections.Collections)
                                {
                                    <li id="@col.ID" class="list-group-item">
                                        <span class="badge">@col.Photos.Count</span>@col.Name
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="javascript:cancelCollectionModalButton()">Cancel</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="javascript:saveCollectionModalButton()">Add To Collections</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
