@model Phocalstream_Web.Models.ViewModels.SearchResults
@{
    ViewBag.Title = "PhotoWall";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/CSS/Search.css",
               "~/Content/CSS/jquery-ui-slider.css",
               "~/Content/CSS/bootstrap-slider.css")
@Scripts.Render("~/Content/Scripts/jquery-ui-1.9.2.js",
                "~/Content/Scripts/jquery-lazyload.js")

<script type="text/javascript" src="~/Content/Scripts/bootbox.min.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoDownload.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoSaveCollection.js"></script>
<script type="text/javascript" src="~/Content/Scripts/PhotoTimelapse.js"></script>
<script>

    var visibleItems = "@Model.PhotoIdList";

    $("img.photo").lazyload({
        threshold: 400,
        effect: "fadeIn"
    });

    var initialSliderValue = 400;

    function initialize() {
        setImageAndText(initialSliderValue);
        computeHolderMargin(initialSliderValue);
    }

    function setText(value) {
        var width = getImgWidth(value);
        var height = getImgHeight(width);

        $("#img-size").html(width + " x " + Math.round(height) + " Pixels");
    }

    function setImageAndText(value) {
        var width = getImgWidth(value);
        var height = getImgHeight(width);
        $(".photo").width(width);
        $(".photo").height(height);

        $("#img-size").html(width + " x " + Math.round(height) + " Pixels");
    }

    function getImgWidth(value) {
        var width = value * 1;
        return width;
    }

    function getImgHeight(width) {
        var scalar = 267 / 400; // (height / width) of placeholder
        return scalar * width;
    }

    var imgDateHidden = false;
    var imgDateSmall = false;
    function scaleOrHideLabel(value) {
        var width = getImgWidth(value);

        if (width <= 200) {
            $(".img-date").css("font-size", "10px");
            imgDateSmall = true;

            if (width <= 75) {
                $(".img-date").hide();
                imgDateHidden = true;
            }
        }

        if (imgDateHidden && width > 75) {
            $(".img-date").show();
            imgDateHidden = false;
        }

        if (imgDateSmall && width > 200) {
            $(".img-date").css("font-size", "14px");
            imgDateSmall = false;
        }
    }

    var totalPhotoCount = @Model.PhotoCount;
    function computeHolderMargin(value) {
        var width = getImgWidth(value);

        var margin = 3;
        var imgWidth = width + (2 * margin);

        var totalWidth = $("#partial").width();

        var numberOfPhotosAcross = Math.floor(totalWidth / imgWidth);

        // corrects for when there are less photos than can fit on screen
        var usedWidth = Math.min(numberOfPhotosAcross, totalPhotoCount) * imgWidth;
        var remainder = totalWidth - usedWidth;

        $(".ul-holder").css("margin-left", (remainder / 2) + "px");
    }

    $(function () {
        $("img.photo").dblclick(function () {
            var id = this.id;
            var url = "@Url.Action("Index", "Photo", null)?photoId=" + id;
            window.open(url, '_blank');
        });
    });

    $(function () {
        $("#slider").slider({
            orientation: "horizontal",
            range: "min",
            min: 25,
            max: 800,
            value: initialSliderValue,
            slide: function (event, ui) {
                setText(ui.value);
            },
            stop: function (event, ui) {
                initialSliderValue = ui.value;

                setImageAndText(ui.value);
                scaleOrHideLabel(ui.value);
                computeHolderMargin(ui.value);
            }
        });

        initialize();
    });

    //If the User resizes the window, readjust the margins
    $(window).bind("resize", resizeWindow);

    function resizeWindow(e) {
        computeHolderMargin($("img.photo").width());
    }

</script>

@section MenuItems
{
    @if (Request.IsAuthenticated)
    {
        <li><a href="javascript:saveCollectionPrompt()">Save Collection</a></li>
    }

    <li><a href="javascript:generateTimelapse()">View Time Lapse</a></li>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <li><a href="javascript:downloadPrompt()">Download Images</a></li>
    }
}

<div class="text-center">
    <div class="fit-width">
        <h1 class="page-header title">@Model.Collection.Name</h1>

        <div class="row">
            <div class="col-md-2">
                <span id="" class="label label-info">@Model.PhotoCount Photos</span>
            </div>
            <div class="col-md-8">
                <div id="slider"></div>
            </div>
            <div class="col-md-2">
                <span id="img-size" class="label label-info"></span>
            </div>
        </div>
    </div>

    <hr class="featurette-divider" />
    @Html.Partial("_SearchGridPartial", Model.Partial)

</div>

<!-- Save User Collection Modal -->
<div id="userCollectionModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">User Collections</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <label class="col-md-12" for="newCollectionName">New Collection Name</label>
                    <div class="col-md-12">
                        <input id="newCollectionName" name="newCollectionName" type="text" placeholder="New Collection Name" class="form-control input-md">
                    </div>
                </div>

                @if (@Model.UserCollections != null)
                {
                    <hr class="featurette-divider" />

                    <div class="row">
                        <label class="col-md-12">Or, Add To Existing</label>
                        <div class="col-md-12">
                            <ul class="list-group user-collection-list">
                                @foreach (var col in Model.UserCollections.Collections)
                                {
                                    <li id="@col.ID" class="list-group-item">
                                        <span class="badge">@col.Photos.Count</span>@col.Name
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="javascript:cancelCollectionModalButton()">Cancel</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="javascript:saveCollectionModalButton()">Add To Collections</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
